name: Build Community .srs Files

on:
  workflow_dispatch:

jobs:
  build-community:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Prepare refilter directories
      run: |
        mkdir -p $GITHUB_WORKSPACE/src/sing-box-files/refilter

        # Копируем community списки в refilter
        cp $GITHUB_WORKSPACE/community.lst $GITHUB_WORKSPACE/src/sing-box-files/refilter/include-domain-refilter_community.lst
        cp $GITHUB_WORKSPACE/community_ips.lst $GITHUB_WORKSPACE/src/sing-box-files/refilter/include-ip-refilter_community.lst

        # Префикс *. для доменов
        sed -i 's/^/*./' $GITHUB_WORKSPACE/src/sing-box-files/refilter/include-domain-refilter_community.lst

    - name: Generate .srs Files
      run: |
        cd $GITHUB_WORKSPACE/src/sing-box-files
        chmod +x generate-geoip-geosite
        # Генерация файлов в той же директории
        ./generate-geoip-geosite -i ./refilter -o ./refilter

    - name: Verify generated files
      run: ls -la $GITHUB_WORKSPACE/src/sing-box-files/refilter

    - name: Install GitHub CLI
      run: sudo apt-get install -y gh

    - name: Authenticate GitHub CLI
      run: gh auth setup-git
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      run: |
        # Берём тег, который вызвал workflow
        TAG_NAME="${GITHUB_REF##*/}"
        RELEASE_NAME="Community Release $TAG_NAME"

        # Создаём релиз и прикрепляем только сгенерированные .srs файлы
        gh release create "$TAG_NAME" \
          $GITHUB_WORKSPACE/src/sing-box-files/refilter/ruleset-domain-refilter_community.srs \
          $GITHUB_WORKSPACE/src/sing-box-files/refilter/ruleset-ip-refilter_community.srs \
          --title "$RELEASE_NAME" \
          --notes "Automatic Community Release" \
          --draft \
          --prerelease
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Verify Release
      run: gh release view "${GITHUB_REF##*/}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
